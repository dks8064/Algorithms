#include <iostream>
#include <climits>
#include <algorithm>
using namespace std;

int N, M, answer = 0;
int map[501][501];
int blocks[19][4][2] = {
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ 0, 3 } },
	{ { 0, 0 },{ 1, 0 },{ 2, 0 },{ 3, 0 } },	// 1
	{ { 0, 0 },{ 1, 0 },{ 0, 1 },{ 1, 1 } },	// 2
	{ { 0, 0 },{ 1, 0 },{ 2, 0 },{ 2, 1 } },
	{ { 0, 0 },{ 1, 0 },{ 2, 0 },{ 2, -1 } },
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ -1, 2 } },
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ -1, 0 } },
	{ { 0, 0 },{ 0, 1 },{ 1, 1 },{ 2, 1 } },
	{ { 0, 0 },{ 0, 1 },{ 1, 0 },{ 2, 0 } },
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ 1, 0 } },
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ 1, 2 } },	// 3
	{ { 0, 0 },{ 1, 0 },{ 1, 1 },{ 2, 1 } },
	{ { 0, 0 },{ 1, 0 },{ 1, -1 },{ 2, -1 } },
	{ { 0, 0 },{ 0, 1 },{ -1, 1 },{ -1, 2 } },
	{ { 0, 0 },{ 0, 1 },{ 1, 1 },{ 1, 2 } },	// 4
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ 1, 1 } },
	{ { 0, 0 },{ 0, 1 },{ 0, 2 },{ -1, 1 } },
	{ { 0, 0 },{ 1, 0 },{ 2, 0 },{ 1, -1 } },
	{ { 0, 0 },{ 1, 0 },{ 2, 0 },{ 1, 1 } },	// 5
};

int main() {
	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) cin >> map[i][j];
	}

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			for (int k = 0; k < 19; k++) {
				bool isIn = true;
				int sum = 0;
				for (int b = 0; b < 4; b++) {
					int bx = i + blocks[k][b][0], by = j + blocks[k][b][1];
					if (bx < 0 || bx >= N || by < 0 || by >= M) {
						isIn = false;
						break;
					}
					else sum += map[bx][by];
				}
				if (!isIn) continue;
				answer = max(answer, sum);
			}
		}
	}


	cout << answer;

	return 0;
}